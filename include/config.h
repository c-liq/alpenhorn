#ifndef ALPENHORN_CONFIG_H
#define ALPENHORN_CONFIG_H
#include <sodium.h>

#include <sys/types.h>

#define CLI_AUTH_REQ 50
#define CLIENT_DIAL_MSG 27
#define CLIENT_AF_MSG 28
#define CLIENT_DIAL_MB_REQUEST 152
#define CLIENT_AF_MB_REQUEST 153

#define crypto_ghash_BYTES crypto_generichash_BYTES
#define crypto_maxhash_BYTES crypto_generichash_BYTES_MAX
#define crypto_MACBYTES crypto_aead_chacha20poly1305_ietf_ABYTES
#define crypto_NBYTES crypto_aead_chacha20poly1305_ietf_NPUBBYTES
// PBC constants
#define g1_elem_compressed_BYTES 33U
#define g2_elem_compressed_BYTES 65U

#define intent_BYTES 4U
#define mb_BYTES 4U
#define round_BYTES 8U
#define dialling_token_BYTES 32U
#define num_pkg_servers 2U
#define num_mix_servers 2U
#define user_id_BYTES 60U
#define net_msg_type_BYTES 4U

#define net_header_BYTES 24U
#define net_client_connect_BYTES (num_mix_servers * crypto_box_PUBLICKEYBYTES)
#define net_client_dial_mb_request (net_header_BYTES + user_id_BYTES)

#define af_request_BYTES (user_id_BYTES + crypto_sign_PUBLICKEYBYTES + crypto_sign_BYTES + g1_elem_compressed_BYTES + crypto_box_PUBLICKEYBYTES + round_BYTES)
#define af_ibeenc_request_BYTES (af_request_BYTES + crypto_ghash_BYTES + g1_elem_compressed_BYTES + crypto_MACBYTES + crypto_NBYTES)
#define onion_layer_BYTES (crypto_NBYTES + crypto_box_PUBLICKEYBYTES + crypto_MACBYTES)
#define onionenc_friend_request_BYTES (mb_BYTES + af_ibeenc_request_BYTES + (num_mix_servers * onion_layer_BYTES))
#define onionenc_dial_token_BYTES (mb_BYTES + dialling_token_BYTES + (num_mix_servers * onion_layer_BYTES))
#define cli_pkg_single_auth_req_BYTES (user_id_BYTES + crypto_sign_BYTES + crypto_box_PUBLICKEYBYTES)

#define pkg_auth_res_BYTES (g1_elem_compressed_BYTES + g2_elem_compressed_BYTES)
#define pkg_enc_auth_res_BYTES (pkg_auth_res_BYTES + crypto_MACBYTES + crypto_NBYTES)
#define pkg_broadcast_msg_BYTES (g1_elem_compressed_BYTES + crypto_box_PUBLICKEYBYTES)
#define pkg_sig_message_BYTES (user_id_BYTES + crypto_box_PUBLICKEYBYTES + round_BYTES)
#define mix_num_dial_mbs_stored 5
#define initial_table_size 50U

#define mix_num_buffer_elems 100000U

#define AF_BATCH 1U
#define DIAL_BATCH 9U
#define NEW_DIAL_ROUND 3U
#define NEW_AF_ROUND 4U
#define NEW_KEY 4U
#define DIAL_MB 40
#define AF_MB 41
#define MIX_SYNC 1337
#define NEW_DMB_AVAIL 188
#define NEW_AFMB_AVAIL 189

static const char pbc_params[] = "type f\n"
    "q 16283262548997601220198008118239886027035269286659395419233331082106632227801\n"
    "r 16283262548997601220198008118239886026907663399064043451383740756301306087801\n"
    "b 5609134383314096343821706060255766178230076423505829753232013255731730969768\n"
    "beta 14585451571835279174057707111090228078498559752534690688696725860687037093655\n"
    "alpha0 7384246685346944302521498672963794600906063696465161604937782621154370513339\n"
    "alpha1 4048507381538522394091069408895150360561946621565222584287381102665313783955\n";

static const char *sk[3] = {"10778343094975392135581974247340460372164289692929233030125470550571339685912",
                            "9688549132935229128161053765094784437559599536117169899827480125341223824030",
                            "14754489302236821884533158176717016782900034847354657195783194213647848389200"};

static const char *pk[3] =
    {"[[6086379828989660989028314078811395552519168740126492884410228417657741197505, 8144852052844972129099269274667998534513045130276301011761818051955232294764],"
         " [12905311036091495766560354314955717180785052939814771374732216405908083158588, 12206468764955976902377549492754113261152529825339665500250747177941759322877]]",
     "[[8160164483073707263225494293658012847814401105023844402795912842754138236016, 3507539360481855979953507669121673921828426608186041809832896241678538524487], "
         "[2935004434206231188893390984062827282093819072637730926703958281099939979728, 1429257052468430779387305210231691157810800546837261775958933730699263478158]]",
     "[[13390979854465689884004374630321832512410728995089304572891318452815493144503, 11615922255584207485349740186764476249491844309988473417920830909660991527655],"
         " [11775135681555340005729773445724583755638324261572440444821270512920972679189, 21057092324234584843398020514715179172990825209983929208054184231184362858]]"};

static const char bls_generator[] = "[[15724257330924097062160683695880250933232554430187007470915263732860196404841,"
    " 11675890099551911688180980551831034403007152045230694854797640069104655082534], "
    "[13349283408131010710625633177944918626847137179157740569651489234485272434916,"
    " 14614450416672873406836739706484919090526432906183872742307134718470620099277]]";

static const char ibe_generator[] =
    "[13445309910996477276498115007761070335613715482521447244233072900478772718670, 1756633159976726073430018948123414634726480138612936748031091597585345575016]";

static const uint8_t
	user_ids[10][user_id_BYTES] = {"chris", "alice", "bob", "eve", "charlie", "jim", "megan", "john", "jill", "steve"};

static const uint8_t user_publickeys[10][64] = {"dce2ce56f88900d2fc09128fd308954ece30fbda56b1202fd21ece8cb8e231bf",
                                                "a11a8d3b6325efa5b6b5372f1a54783bf5b9b0816e7aad6c848bd4936b19a493",
                                                "deb27d637dbb5e82234439dc6410dcff2720412affe09d69adaafeb775ca6eb1",
                                                "cbf9aa2432aa0b7ed86fd4cee2e54f998b4019e0e1d2194d207553082bd3dd5e",
                                                "2ddb31f8c4cf162218eb5b897c33c0002de8b7fc3fd6edb8be9d0c4b2a4f385a",
                                                "2c13f995d0c403014e58309c5b24cdd13fb90b68e1f60f187e3ecebf936b78b0",
                                                "f9f8f4330c77763cb472d560da5765093b8b50645a4345de646c99d69387d442",
                                                "27fc5fab0c93af7f4cd5e09aae95080609720ecac24b8f93e517015dded669e0",
                                                "031ca754e5896d5e84eb21866439e1b631225193619734f364de90f228485f94",
                                                "b1fcd02a40da1e342f2c8404c7438e24d673666fe8160e5d23c7278244abc085"};

static const uint8_t user_lt_secret_sig_keys[10][128] =
    {"6581ce40d6971c2fd1d2ca07fe5280be823a327bca5bb8d3d110ec906247493cdce2ce56f88900d2fc09128fd308954ece30fbda56b1202fd21ece8cb8e231bf",
     "112425a435b38a6867722004400e228157a3b7722925c90db891ed31fd018ab9a11a8d3b6325efa5b6b5372f1a54783bf5b9b0816e7aad6c848bd4936b19a493",
     "458d01cfc4f208aebe02a07f84214be38d0a6a858c80af5a8d04b76241907d06deb27d637dbb5e82234439dc6410dcff2720412affe09d69adaafeb775ca6eb1",
     "7d6fe8126eb4fb33768d6df90101bc2f9a267339fd1161f9056fcb2fea920a28cbf9aa2432aa0b7ed86fd4cee2e54f998b4019e0e1d2194d207553082bd3dd5e",
     "07c02ccbd210d5b52a55a4227d18e02aec4d23b1ac7a5606a9161b7c370753472ddb31f8c4cf162218eb5b897c33c0002de8b7fc3fd6edb8be9d0c4b2a4f385a",
     "cad06e122e4600f617a65c5a67294c3a93d96c68c129ff7a382beb484f77a5992c13f995d0c403014e58309c5b24cdd13fb90b68e1f60f187e3ecebf936b78b0",
     "2563472f38a1b997b411d7584efc6937a5a07fc638f600004a9238f7293d6850f9f8f4330c77763cb472d560da5765093b8b50645a4345de646c99d69387d442",
     "ec3077ddf1f65b34354e40d00de35dd50b7c95a846fd5f9bc4e965bec22facea27fc5fab0c93af7f4cd5e09aae95080609720ecac24b8f93e517015dded669e0",
     "48d5f089e848d75a5e8badee289b6be5895d15b0f8c418a8d6d4da7781fa05a7031ca754e5896d5e84eb21866439e1b631225193619734f364de90f228485f94",
     "a4b9ca4f8bf7679b297c6e6a230733868ac525b15c690ba008d742b001385d93b1fcd02a40da1e342f2c8404c7438e24d673666fe8160e5d23c7278244abc085"};

#endif //ALPENHORN_CONFIG_H
